{
  "rules": [
    {
      "name": "Next.js 页面组件",
      "pattern": "app/**/*.tsx",
      "description": "Next.js 页面组件应该遵循以下规则：\n1. 使用默认导出\n2. 组件名称应该以 Page 结尾\n3. 使用 TypeScript 类型注解\n4. 遵循 Next.js 的文件系统路由约定",
      "example": "export default function HomePage() {\n  return (\n    <main>\n      {/* 页面内容 */}\n    </main>\n  )\n}"
    },
    {
      "name": "React 组件",
      "pattern": "components/**/*.tsx",
      "description": "React 组件应该遵循以下规则：\n1. 使用默认导出\n2. 组件名称使用 PascalCase\n3. 使用 TypeScript 类型注解\n4. 使用 Tailwind CSS 进行样式设计\n5. 组件文件应该放在 components 目录下",
      "example": "export default function Button() {\n  return (\n    <button className=\"px-4 py-2 bg-blue-500 text-white rounded\">\n      Click me\n    </button>\n  )\n}"
    },
    {
      "name": "样式规则",
      "pattern": "**/*.{tsx,css}",
      "description": "样式应该遵循以下规则：\n1. 使用 Tailwind CSS 类名\n2. 自定义样式应该放在 globals.css 中\n3. 使用 CSS 变量定义主题颜色\n4. 响应式设计使用 Tailwind 的断点前缀",
      "example": "className=\"text-4xl md:text-6xl font-bold\""
    },
    {
      "name": "路由规则",
      "pattern": "app/**/*.tsx",
      "description": "路由应该遵循以下规则：\n1. 使用 Next.js 的文件系统路由\n2. 页面组件应该放在 app 目录下\n3. 使用 Link 组件进行导航\n4. 动态路由使用 [param] 文件夹",
      "example": "import Link from 'next/link'\n\n<Link href=\"/about\">About</Link>"
    },
    {
      "name": "状态管理",
      "pattern": "**/*.tsx",
      "description": "状态管理应该遵循以下规则：\n1. 使用 React 的 useState 和 useEffect\n2. 复杂状态考虑使用 Context API\n3. 避免全局状态管理除非必要\n4. 使用 TypeScript 类型定义状态",
      "example": "const [count, setCount] = useState<number>(0)"
    },
    {
      "name": "类型定义",
      "pattern": "**/*.{ts,tsx}",
      "description": "类型定义应该遵循以下规则：\n1. 使用 TypeScript 类型注解\n2. 定义接口和类型\n3. 使用泛型\n4. 避免使用 any 类型",
      "example": "interface User {\n  id: number\n  name: string\n  email: string\n}"
    }
  ],
  "settings": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "typescript.tsdk": "node_modules/typescript/lib",
    "tailwindCSS.includeLanguages": {
      "typescript": "javascript",
      "typescriptreact": "javascript"
    }
  }
} 